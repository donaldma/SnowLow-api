service: snowlow

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
      # noStart: true

provider:
  name: aws
  runtime: nodejs6.10
  environment:
    JWT_SECRET: snowlowsuprtsecretssh
    USER_TABLE: ${self:service}-user
    SEARCH_HISTORY_TABLE: ${self:service}-searchHistory
  iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.USER_TABLE}"

functions:

  register:
    handler: /build/controllers/UserController.register
    events:
      - http:
          path: user/register
          method: post
          cors: true

  list:
    handler: /build/controllers/UserController.getAll
    events:
      - http:
          path: user
          method: get
          cors: true

  get:
    handler: /build/controllers/UserController.get
    events:
      - http:
          path: user/{id}
          method: get
          cors: true

  update:
    handler: /build/controllers/UserController.update
    events:
      - http:
          path: user/{id}
          method: put
          cors: true

  delete:
    handler: /build/controllers/UserController.delete
    events:
      - http:
          path: user/{id}
          method: delete
          cors: true

  deleteAll:
    handler: /build/controllers/UserController.deleteAll
    events:
      - http:
          path: user
          method: delete
          cors: true
          authorizer: aws_iam

resources:
  Resources:
    UserDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.USER_TABLE}
    SearchHistoryDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.SEARCH_HISTORY_TABLE}